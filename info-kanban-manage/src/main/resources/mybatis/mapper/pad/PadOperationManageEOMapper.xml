<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.adc.da.pad.dao.PadOperationManageEODao" >
  <!-- Result Map-->
  <resultMap id="BaseResultMap" type="com.adc.da.pad.entity.PadOperationManageEO" >
    <id column="id" property="id" />
    <result column="year" property="year" />
    <result column="month" property="month" />
    <result column="big_org_name" property="bigOrgName" />
    <result column="big_org_id" property="bigOrgId" />
    <result column="contract_amount" property="contractAmount" />
    <result column="invoice_amount" property="invoiceAmount" />
    <result column="income_amount" property="incomeAmount" />
    <result column="update_user_id" property="updateUserId" />
    <result column="update_user_name" property="updateUserName" />
    <result column="update_time" property="updateTime" />
    <result column="del_flag" property="delFlag" />
  </resultMap>

  <!-- PAD_OPERATION_MANAGE table all fields -->
  <sql id="Base_Column_List" >
     id, year, month, big_org_name, big_org_id, contract_amount, invoice_amount, income_amount, update_user_id, update_user_name, update_time, del_flag
  </sql>

  <!-- 查询条件 -->
  <sql id="Base_Where_Clause">
    where 1=1 and del_flag != 1
    <trim suffixOverrides="," >
      <if test="id != null" >
        and id ${idOperator} #{id}
      </if>
      <if test="year != null" >
        and year ${yearOperator} #{year}
      </if>
      <if test="month != null" >
        and month ${monthOperator} #{month}
      </if>
      <if test="bigOrgName != null" >
        and big_org_name like '%'||#{bigOrgName}||'%'
      </if>
      <if test="bigOrgId != null" >
        and big_org_id ${bigOrgIdOperator} #{bigOrgId}
      </if>
      <if test="contractAmount != null" >
        and contract_amount ${contractAmountOperator} #{contractAmount}
      </if>
      <if test="invoiceAmount != null" >
        and invoice_amount ${invoiceAmountOperator} #{invoiceAmount}
      </if>
      <if test="incomeAmount != null" >
        and income_amount ${incomeAmountOperator} #{incomeAmount}
      </if>
      <if test="updateUserId != null" >
        and update_user_id ${updateUserIdOperator} #{updateUserId}
      </if>
      <if test="updateUserName != null" >
        and update_user_name ${updateUserNameOperator} #{updateUserName}
      </if>
      <if test="updateTime != null" >
        and update_time ${updateTimeOperator} #{updateTime}
      </if>
      <if test="updateTime1 != null" >
        and update_time &gt;= #{updateTime1}
      </if>
      <if test="updateTime2 != null" >
        and update_time &lt;= #{updateTime2}
      </if>
      <if test="delFlag != null" >
        and del_flag ${delFlagOperator} #{delFlag}
      </if>
    </trim>
  </sql>

    <sql id="Prefix_Base_Where_Clause">
        where 1=1 and pom.del_flag != 1
        <trim suffixOverrides="," >
            <if test="id != null" >
                and pom.id ${idOperator} #{id}
            </if>
            <if test="year != null" >
                and pom.year ${yearOperator} #{year}
            </if>
            <if test="month != null" >
                and pom.month ${monthOperator} #{month}
            </if>
            <if test="bigOrgName != null" >
                and torg.org_abb like '%'||#{bigOrgName}||'%'
            </if>
            <if test="bigOrgId != null" >
                and pom.big_org_id ${bigOrgIdOperator} #{bigOrgId}
            </if>
            <if test="contractAmount != null" >
                and pom.contract_amount ${contractAmountOperator} #{contractAmount}
            </if>
            <if test="invoiceAmount != null" >
                and pom.invoice_amount ${invoiceAmountOperator} #{invoiceAmount}
            </if>
            <if test="incomeAmount != null" >
                and pom.income_amount ${incomeAmountOperator} #{incomeAmount}
            </if>
            <if test="updateUserId != null" >
                and pom.update_user_id ${updateUserIdOperator} #{updateUserId}
            </if>
            <if test="updateUserName != null" >
                and pom.update_user_name ${updateUserNameOperator} #{updateUserName}
            </if>
            <if test="updateTime != null" >
                and pom.update_time ${updateTimeOperator} #{updateTime}
            </if>
            <if test="updateTime1 != null" >
                and pom.update_time &gt;= #{updateTime1}
            </if>
            <if test="updateTime2 != null" >
                and pom.update_time &lt;= #{updateTime2}
            </if>
            <if test="delFlag != null" >
                and pom.del_flag ${delFlagOperator} #{delFlag}
            </if>
        </trim>
    </sql>

  <!-- 插入记录 -->
  <insert id="insert" parameterType="com.adc.da.pad.entity.PadOperationManageEO" >
    <!-- <selectKey resultType="java.lang.String" order="BEFORE" keyProperty="id">
        SELECT SEQ_PAD_OPERATION_MANAGE.NEXTVAL FROM DUAL
    </selectKey> -->
    insert into PAD_OPERATION_MANAGE(<include refid="Base_Column_List" />)
    values (#{id, jdbcType=VARCHAR}, #{year, jdbcType=INTEGER}, #{month, jdbcType=INTEGER}, #{bigOrgName, jdbcType=VARCHAR}, #{bigOrgId, jdbcType=VARCHAR}, #{contractAmount, jdbcType=DOUBLE}, #{invoiceAmount, jdbcType=DOUBLE}, #{incomeAmount, jdbcType=DOUBLE}, #{updateUserId, jdbcType=VARCHAR}, #{updateUserName, jdbcType=VARCHAR}, #{updateTime, jdbcType=TIMESTAMP}, #{delFlag, jdbcType=INTEGER})
  </insert>

  <!-- 动态插入记录 主键是序列 -->
  <insert id="insertSelective" parameterType="com.adc.da.pad.entity.PadOperationManageEO" >
        <!-- <selectKey resultType="java.lang.String" order="BEFORE" keyProperty="id">
        SELECT SEQ_PAD_OPERATION_MANAGE.NEXTVAL FROM DUAL
    </selectKey> -->
        insert into PAD_OPERATION_MANAGE
    <trim prefix="(" suffix=")" suffixOverrides="," >
                <if test="id != null" >id,</if>
                <if test="year != null" >year,</if>
                <if test="month != null" >month,</if>
                <if test="bigOrgName != null" >big_org_name,</if>
                <if test="bigOrgId != null" >big_org_id,</if>
                <if test="contractAmount != null" >contract_amount,</if>
                <if test="invoiceAmount != null" >invoice_amount,</if>
                <if test="incomeAmount != null" >income_amount,</if>
                <if test="updateUserId != null" >update_user_id,</if>
                <if test="updateUserName != null" >update_user_name,</if>
                <if test="updateTime != null" >update_time,</if>
                <if test="delFlag != null" >del_flag,</if>
            </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
                <if test="id != null" >#{id, jdbcType=VARCHAR},</if>
                <if test="year != null" >#{year, jdbcType=INTEGER},</if>
                <if test="month != null" >#{month, jdbcType=INTEGER},</if>
                <if test="bigOrgName != null" >#{bigOrgName, jdbcType=VARCHAR},</if>
                <if test="bigOrgId != null" >#{bigOrgId, jdbcType=VARCHAR},</if>
                <if test="contractAmount != null" >#{contractAmount, jdbcType=DOUBLE},</if>
                <if test="invoiceAmount != null" >#{invoiceAmount, jdbcType=DOUBLE},</if>
                <if test="incomeAmount != null" >#{incomeAmount, jdbcType=DOUBLE},</if>
                <if test="updateUserId != null" >#{updateUserId, jdbcType=VARCHAR},</if>
                <if test="updateUserName != null" >#{updateUserName, jdbcType=VARCHAR},</if>
                <if test="updateTime != null" >#{updateTime, jdbcType=TIMESTAMP},</if>
                <if test="delFlag != null" >#{delFlag, jdbcType=INTEGER},</if>
            </trim>
  </insert>

  <!-- 根据pk，修改记录-->
  <update id="updateByPrimaryKey" parameterType="com.adc.da.pad.entity.PadOperationManageEO" >
    update PAD_OPERATION_MANAGE
       set  year = #{year},
            month = #{month},
            big_org_name = #{bigOrgName},
            big_org_id = #{bigOrgId},
            contract_amount = #{contractAmount},
            invoice_amount = #{invoiceAmount},
            income_amount = #{incomeAmount},
            update_user_id = #{updateUserId},
            update_user_name = #{updateUserName},
            update_time = #{updateTime},
            del_flag = #{delFlag}
     where  id = #{id}
  </update>

  <!-- 修改记录，只修改只不为空的字段 -->
  <update id="updateByPrimaryKeySelective" parameterType="com.adc.da.pad.entity.PadOperationManageEO" >
    update PAD_OPERATION_MANAGE
    <set >
      <if test="year != null" >
        year = #{year},
      </if>
      <if test="month != null" >
        month = #{month},
      </if>
      <if test="bigOrgName != null" >
        big_org_name = #{bigOrgName},
      </if>
      <if test="bigOrgId != null" >
        big_org_id = #{bigOrgId},
      </if>
      <if test="contractAmount != null" >
        contract_amount = #{contractAmount},
      </if>
      <if test="invoiceAmount != null" >
        invoice_amount = #{invoiceAmount},
      </if>
      <if test="incomeAmount != null" >
        income_amount = #{incomeAmount},
      </if>
      <if test="updateUserId != null" >
        update_user_id = #{updateUserId},
      </if>
      <if test="updateUserName != null" >
        update_user_name = #{updateUserName},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime},
      </if>
      <if test="delFlag != null" >
        del_flag = #{delFlag},
      </if>
    </set>
     where id = #{id}
  </update>

  <!-- 根据id查询 PAD_OPERATION_MANAGE -->
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String">
    select  distinct  pom.id as id,  pom.year as year, pom.month as month, torg.ORG_ABB as BIG_ORG_NAME, pom.big_org_id as big_org_id,
     pom.contract_amount as contract_amount,  pom.invoice_amount as invoice_amount,  pom.income_amount as income_amount,  pom.update_user_id as update_user_id,
      pom.update_user_name as update_user_name,  pom.update_time as update_time,  pom.del_flag as del_flag
      from PAD_OPERATION_MANAGE pom
      left join TS_ORG torg on torg.ID = pom.BIG_ORG_ID
     where pom.id = #{value}

  </select>

    <!-- 根据id查询 PAD_OPERATION_MANAGE -->
    <select id="selectOrgNames" resultType="java.lang.String" >
        select distinct big_org_name from PAD_OPERATION_MANAGE
    </select>

    <select id="selectBigOrgNames" resultType="java.lang.String" >
        select ORG_ABB  from TS_ORG where ORG_DESC like '%本部%' and DEL_FLAG != 1
        order by  weight
    </select>

    <!-- 根据id查询 PAD_OPERATION_MANAGE -->
    <select id="sumByMonthAndYear" resultMap="BaseResultMap">
        select sum (CONTRACT_AMOUNT) as CONTRACT_AMOUNT , sum(INVOICE_AMOUNT) as INVOICE_AMOUNT ,sum(INCOME_AMOUNT) as INCOME_AMOUNT
        from PAD_OPERATION_MANAGE
        where MONTH = #{month} and year = #{year} and del_flag != 1

    </select>

    <!-- 根据id查询 PAD_OPERATION_MANAGE -->
    <select id="sumByYear" resultMap="BaseResultMap" parameterType="java.lang.Integer">
        select sum (CONTRACT_AMOUNT) as CONTRACT_AMOUNT , sum(INVOICE_AMOUNT) as INVOICE_AMOUNT ,sum(INCOME_AMOUNT) as INCOME_AMOUNT
        from PAD_OPERATION_MANAGE
        where YEAR = #{value} and del_flag != 1

    </select>

    <!-- 根据id查询 PAD_OPERATION_MANAGE -->
    <select id="sumGroupByMonthInYear" resultMap="BaseResultMap" parameterType="java.lang.Integer">
        select sum (CONTRACT_AMOUNT) as CONTRACT_AMOUNT , sum(INVOICE_AMOUNT) as INVOICE_AMOUNT ,sum(INCOME_AMOUNT) as INCOME_AMOUNT, month
        from PAD_OPERATION_MANAGE
        where  year =#{value} and del_flag != 1 group BY month
    </select>

    <!-- 根据id查询 PAD_OPERATION_MANAGE -->
    <select id="sumGroupByOrgInYear" resultMap="BaseResultMap" parameterType="java.lang.Integer">
        select sum ( pom.CONTRACT_AMOUNT) as CONTRACT_AMOUNT , sum( pom.INVOICE_AMOUNT) as INVOICE_AMOUNT ,sum( pom.INCOME_AMOUNT) as INCOME_AMOUNT,  torg.ORG_ABB as BIG_ORG_NAME
        from PAD_OPERATION_MANAGE pom
        left join TS_ORG torg on torg.ID = pom.BIG_ORG_ID
        where  pom.year =#{value} and pom.del_flag != 1 group BY torg.ORG_ABB
    </select>

    <!-- 根据id查询 PAD_OPERATION_MANAGE -->
    <select id="sumGroupByOrgInYearAndMonthLte" resultMap="BaseResultMap" parameterType="java.lang.Integer">
        select sum ( pom.CONTRACT_AMOUNT) as CONTRACT_AMOUNT , sum( pom.INVOICE_AMOUNT) as INVOICE_AMOUNT ,sum( pom.INCOME_AMOUNT) as INCOME_AMOUNT, torg.ORG_ABB as BIG_ORG_NAME
        from PAD_OPERATION_MANAGE pom
        left join TS_ORG torg on torg.ID = pom.BIG_ORG_ID
        where  pom.year = #{year} and pom.month &lt; = #{month} and pom.del_flag != 1 group BY torg.ORG_ABB
    </select>


    <!-- 根据id查询 PAD_OPERATION_MANAGE -->
    <select id="sumGroupByOrgInYearAndMonthEq" resultMap="BaseResultMap" parameterType="java.lang.Integer">
        select sum ( pom.CONTRACT_AMOUNT) as CONTRACT_AMOUNT , sum( pom.INVOICE_AMOUNT) as INVOICE_AMOUNT ,sum( pom.INCOME_AMOUNT) as INCOME_AMOUNT, torg.ORG_ABB as BIG_ORG_NAME
        from PAD_OPERATION_MANAGE  pom
        left join TS_ORG torg on torg.ID = pom.BIG_ORG_ID
        where  pom.year =#{year} and pom.month =#{month} and pom.del_flag != 1 group BY torg.ORG_ABB
    </select>


  <!-- 删除记录 -->
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from PAD_OPERATION_MANAGE
     where id = #{value}

  </delete>

  <!-- PAD_OPERATION_MANAGE 列表总数-->
  <select id="queryByCount" resultType="java.lang.Integer" parameterType="com.adc.da.base.page.BasePage">
    select count(1) from PAD_OPERATION_MANAGE
    <include refid="Base_Where_Clause"/>
  </select>

  <!-- 查询PAD_OPERATION_MANAGE列表 -->
  <select id="queryByPage" resultMap="BaseResultMap" parameterType="com.adc.da.base.page.BasePage">
	select <include refid="Base_Column_List" /> from
		(select tmp_tb.* , rownum rn from
			(select
                  distinct  pom.id as id,  pom.year as year, pom.month as month, torg.ORG_ABB as BIG_ORG_NAME, pom.big_org_id as big_org_id,
                  pom.contract_amount as contract_amount,  pom.invoice_amount as invoice_amount,  pom.income_amount as income_amount,  pom.update_user_id as update_user_id,
                  pom.update_user_name as update_user_name,  pom.update_time as update_time,  pom.del_flag as del_flag
			 from PAD_OPERATION_MANAGE pom
                  left join TS_ORG torg on torg.ID = pom.BIG_ORG_ID
			 <include refid="Prefix_Base_Where_Clause"/>
			 <if test="pager.orderCondition != null and pager.orderCondition != ''" >
			 	${pager.orderCondition}
			 </if>
			) tmp_tb where rownum &lt;= ${pager.endIndex})
			where rn &gt;= ${pager.startIndex}
  </select>

  <select id="queryByList" resultMap="BaseResultMap" parameterType="com.adc.da.base.page.BasePage">
    select <include refid="Base_Column_List"/> from PAD_OPERATION_MANAGE
    <include refid="Base_Where_Clause"/>
    <if test="pager.orderCondition != null and pager.orderCondition != ''" >
       ${pager.orderCondition}
    </if>
  </select>



<!--批量逻辑删除-->
<update id = "deleteLogicInBatch" parameterType = "java.util.List">
    update PAD_OPERATION_MANAGE set del_flag = 1 where id in
    <foreach item = "id" collection = "list" open = "(" separator = "," close = ")" index = "index">
        #{id}
    </foreach>
</update>

    <!--批量逻辑删除-->
    <update id = "deleteLogicAll" parameterType = "java.util.List">
        update PAD_OPERATION_MANAGE set del_flag = 1 where 1=1
    </update>


<insert id="insertList" parameterType="java.util.List">
    INSERT ALL
    <foreach collection="list" item="item" index="index">
        <if test="item.id !=null">
            INTO PAD_OPERATION_MANAGE
            <trim prefix="(" suffix=")" suffixOverrides=",">
                <if test="item.id != null" >id,</if>
                <if test="item.year != null" >year,</if>
                <if test="item.month != null" >month,</if>
                <if test="item.bigOrgName != null" >big_org_name,</if>
                <if test="item.bigOrgId != null" >big_org_id,</if>
                <if test="item.contractAmount != null" >contract_amount,</if>
                <if test="item.invoiceAmount != null" >invoice_amount,</if>
                <if test="item.incomeAmount != null" >income_amount,</if>
                <if test="item.updateUserId != null" >update_user_id,</if>
                <if test="item.updateUserName != null" >update_user_name,</if>
                <if test="item.updateTime != null" >update_time,</if>
                <if test="item.delFlag != null" >del_flag,</if>
            </trim>
            <trim prefix="values (" suffix=")" suffixOverrides=",">
                <if test="item.id != null" >#{item.id, jdbcType=VARCHAR},</if>
                <if test="item.year != null" >#{item.year, jdbcType=INTEGER},</if>
                <if test="item.month != null" >#{item.month, jdbcType=INTEGER},</if>
                <if test="item.bigOrgName != null" >#{item.bigOrgName, jdbcType=VARCHAR},</if>
                <if test="item.bigOrgId != null" >#{item.bigOrgId, jdbcType=VARCHAR},</if>
                <if test="item.contractAmount != null" >#{item.contractAmount, jdbcType=DOUBLE},</if>
                <if test="item.invoiceAmount != null" >#{item.invoiceAmount, jdbcType=DOUBLE},</if>
                <if test="item.incomeAmount != null" >#{item.incomeAmount, jdbcType=DOUBLE},</if>
                <if test="item.updateUserId != null" >#{item.updateUserId, jdbcType=VARCHAR},</if>
                <if test="item.updateUserName != null" >#{item.updateUserName, jdbcType=VARCHAR},</if>
                <if test="item.updateTime != null" >#{item.updateTime, jdbcType=TIMESTAMP},</if>
                <if test="item.delFlag != null" >#{item.delFlag, jdbcType=INTEGER},</if>
            </trim>
        </if>
    </foreach>
    SELECT 1 FROM dual
</insert>


</mapper>
